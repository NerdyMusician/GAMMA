<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cc="clr-namespace:GAMMA.CustomControls">

    <Style TargetType="Button" x:Key="BaseImageButton">
        <Setter Property="Width" Value="136" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="1" Background="{TemplateBinding Background}" BorderThickness="0 0 1 1" Padding="2" BorderBrush="{StaticResource ButtonBorder}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 0 0 0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBorder}" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryFontColor}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="cc:ImageButton" x:Key="ImageButton" BasedOn="{StaticResource BaseImageButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Style="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type cc:ImageButton}}, Path=ImageResource}" />
                        <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type cc:ImageButton}}, Path=Text}" Margin="4 0 0 0" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="BaseMiniButton">
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColor}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="1" Background="{TemplateBinding Background}" BorderThickness="0 0 1 1" Padding="2" BorderBrush="{StaticResource ButtonBorder}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="cc:MiniButton" x:Key="MiniButton" BasedOn="{StaticResource BaseMiniButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Style="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type cc:MiniButton}}, Path=ImageResource}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="cc:IconButton" x:Key="IconButton">
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderThickness="0" Padding="0" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Style="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type cc:IconButton}}, Path=ImageResource}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="SlateGray" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="cc:ImageToggleButton" x:Key="ImageToggleButton">
        <Setter Property="Width" Value="136" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColor}" />
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Margin" Value="2 2 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="cc:ImageToggleButton">
                    <Border CornerRadius="1" Background="{TemplateBinding Background}" BorderThickness="0 0 1 1" Padding="2" BorderBrush="{StaticResource ButtonBorder}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 0 0 0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="4 0 0 0">
                        <Image Style="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type cc:ImageToggleButton}}, Path=ImageResource}" Margin="-4 0 0 0" />
                        <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type cc:ImageToggleButton}}, Path=Text}" Margin="4 0 0 0" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked"  Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ToggleButton" x:Key="VerticalHider">
        <Setter Property="MinWidth" Value="700" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <RotateTransform CenterX="25" CenterY="25" Angle="270" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}" BorderThickness="2" Padding="4" BorderBrush="{StaticResource ButtonBorder}">
                        <ContentPresenter HorizontalAlignment="Right"  />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked"  Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBorder}" />
            </Trigger>
            <Trigger Property="IsChecked"  Value="False">
                <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ToggleButton" x:Key="HorizontalHider">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" Padding="0" BorderBrush="{StaticResource ButtonBorder}">
                        <ContentPresenter HorizontalAlignment="Right"  />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked"  Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBorder}" />
            </Trigger>
            <Trigger Property="IsChecked"  Value="False">
                <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="cc:MiniToggleButton" x:Key="MiniToggleButton">
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Padding" Value="2 2 0 0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="cc:MiniToggleButton">
                    <Border CornerRadius="1" Background="{TemplateBinding Background}" BorderThickness="0 0 1 1" Padding="4 2 0 0" BorderBrush="{StaticResource ButtonBorder}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0 0 0 0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Style="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type cc:MiniToggleButton}}, Path=ImageResource}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked"  Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBorder}" />
            </Trigger>
            <Trigger Property="IsChecked"  Value="False">
                <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="cc:IconToggleButton" x:Key="IconToggleButton">
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderThickness="0" Padding="0" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Style="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type cc:IconToggleButton}}, Path=ImageResource}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked"  Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBorder}" />
            </Trigger>
            <Trigger Property="IsChecked"  Value="False">
                <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>